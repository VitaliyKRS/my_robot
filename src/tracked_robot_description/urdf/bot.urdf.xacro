<?xml version="1.0"?>
<robot name="adoptee_robot" xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- ****************** ROBOT CONSTANTS *******************************  -->
    <!-- Define the size of the robot's main chassis in meters -->
    <xacro:property name="K" value="1.0" />
    <xacro:property name="base_width" value="${0.082 * K}" />
    <xacro:property name="base_length" value="${0.183 * K}" />
    <xacro:property name="base_height" value="${0.1 * K}" />

    <!-- Define the shape of the robot's two back wheels in meters -->
    <xacro:property name="wheel_radius" value="${0.02645 * K}" />
    <xacro:property name="wheel_width" value="${0.04 * K}" />

    <!-- x-axis points forward, y-axis points to left, z-axis points upwards -->
    <!-- Define the gap between the wheel and chassis along y-axis in meters -->
    <xacro:property name="wheel_ygap" value="${0.0075 * K}" />

    <!-- Position the wheels along the z-axis -->
    <xacro:property name="wheel_zoff" value="${0.02 * K}" />

    <!-- Position the wheels along the x-axis -->
    <xacro:property name="wheel_xoff" value="${0.05 * K}" />

    <!-- Define intertial property macros  -->
    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}"
                iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}"
                iyz="0" izz="${(m/2) * (r*r)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}"
                iyz="0.0" izz="${(2/5) * m * (r*r)}" />
        </inertial>
    </xacro:macro>

    <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
    <!-- Define the center of the main robot chassis projected on the ground -->
    <link name="base_footprint" />

    <!-- The base footprint of the robot is located underneath the chassis -->
    <joint name="base_joint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0.0 0.0 ${(wheel_radius+wheel_zoff)}" rpy="0 0 0" />
    </joint>

    <!-- ********************** ROBOT BASE *********************************  -->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
            <material name="Red">
                <color rgba="${255/255} ${0/255} ${0/255} 1.0" />
            </material>
        </visual>

        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
        </collision>

        <xacro:box_inertia m="40.0" w="${base_width}" d="${base_length}" h="${base_height}" />

    </link>

    <gazebo reference="base_link">
        <material>Gazebo/Red</material>
    </gazebo>

    <!-- *********************** DRIVE WHEELS ******************************  -->

    <xacro:macro name="rear_wheel" params="prefix x_reflect y_reflect">
        <link name="rear_${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="1.5707963267949 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
                <material name="White">
                    <color rgba="${255/255} ${255/255} ${255/255} 1.0" />
                </material>
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
            </collision>

            <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}" />

        </link>

        <joint name="rear_${prefix}_wheel_joint" type="revolute">
            <parent link="base_link" />
            <child link="rear_${prefix}_wheel_link" />
            <origin
                xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}"
                rpy="0 0 0" />
            <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0" />
            <axis xyz="0 1 0" />
        </joint>
    </xacro:macro>

    <xacro:macro name="front_wheel" params="prefix x_reflect y_reflect">
        <link name="front_${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="1.5707963267949 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
                <material name="White">
                    <color rgba="${255/255} ${255/255} ${255/255} 1.0" />
                </material>
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
            </collision>

            <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}" />

        </link>
        <joint name="front_${prefix}_wheel_joint" type="revolute">
            <parent link="base_link" />
            <child link="front_${prefix}_wheel_link" />
            <origin
                xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}"
                rpy="0 0 0" />
            <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0" />
            <axis xyz="0 1 0" />
        </joint>
    </xacro:macro>

    <!-- <xacro:rear_wheel prefix="left" x_reflect="-1" y_reflect="1" />
    <xacro:rear_wheel prefix="right" x_reflect="-1" y_reflect="-1" />  -->
    <xacro:front_wheel prefix="left" x_reflect="0" y_reflect="1" />
    <xacro:front_wheel prefix="right" x_reflect="0" y_reflect="-1" />

    <link name="imu_link">
        <visual>
            <origin
            xyz="0 0 0"
            rpy="0 1.57 0" />
            <geometry>
                <box size="0.001 0.01 0.01" />
            </geometry>
            <material name="Green">
                <color rgba="${0/255} ${255/255} ${0/255} 1.0" />
            </material>
        </visual>

        <collision>
            <geometry>
                <box size="0.01 0.1 0.1" />
            </geometry>
        </collision>

        <xacro:box_inertia m="40.0" w="0.01" d="0.1" h="0.1" />
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link" />
        <child link="imu_link" />
        <origin
            xyz="0 0 0"
            rpy="0 0 0" />
    </joint>

    <link name="lidar_link">
        <visual>
            <geometry>
                <box size="0.01 0.01 0.01" />
            </geometry>
            <material name="Blue">
                <color rgba="${0/255} ${0/255} ${255/255} 1.0" />
            </material>
        </visual>

        <collision>
            <geometry>
                <box size="0.01 0.1 0.1" />
            </geometry>
        </collision>

        <xacro:box_inertia m="40.0" w="0.01" d="0.1" h="0.1" />
    </link>

    <joint name="lidar_joint" type="fixed">
        <parent link="base_link" />
        <child link="lidar_link" />
        <origin
            xyz="${base_length / 2} 0 0"
            rpy="0 0 0" />
    </joint>

    <ros2_control name="robot_motors_control" type="system">
        <hardware>
            <plugin>motor_hw/MotorHWInterface</plugin>
            <param name="left_wheel_joint">front_left_wheel_joint</param>
            <param name="right_wheel_joint">front_right_wheel_joint</param>
            <param name="enc_counts_per_rev">555</param>
            <param name="loop_rate">1</param>
            <param name="device">/dev/ttyUSB0</param>
        </hardware>
        <joint name="front_left_wheel_joint">
            <command_interface name="velocity" />
            <state_interface name="position" />
            <state_interface name="velocity" />
        </joint>
        <joint name="front_right_wheel_joint">
            <command_interface name="velocity" />
            <state_interface name="position" />
            <state_interface name="velocity" />
        </joint>
    </ros2_control>
</robot>