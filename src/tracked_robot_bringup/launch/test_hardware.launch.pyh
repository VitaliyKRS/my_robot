# Copyright 2020 ros2_control Development Team
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import os
import launch
from ament_index_python.packages import get_package_share_directory
from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument, RegisterEventHandler
from launch.conditions import IfCondition
from launch.event_handlers import OnProcessExit
from launch.substitutions import Command, FindExecutable, PathJoinSubstitution, LaunchConfiguration

from launch_ros.actions import Node
from launch_ros.substitutions import FindPackageShare


def generate_launch_description():
    # Get URDF via xacro
    robot_description_content = Command(
        [
            PathJoinSubstitution([FindExecutable(name="xacro")]),
            " ",
            PathJoinSubstitution(
                [FindPackageShare("tracked_robot_description"), "urdf", "tracked_robot_hardware.urdf"]
            ),
        ]
    )
    robot_description = {"robot_description": robot_description_content}

    robot_controllers = PathJoinSubstitution(
        [
            FindPackageShare("tracked_robot_hardware"),
            "controllers",
            "robot_controller.yaml",
        ]
    )
    tracked_robot_bringup_path = get_package_share_directory('tracked_robot_bringup')
    robot_localization_file_path = os.path.join(tracked_robot_bringup_path, 'config/ekf_with_gps.yaml') 
    #use_sim_time = LaunchConfiguration('use_sim_time', default='false')


    share_dir = get_package_share_directory('mpu9250driver')
    parameter_file = LaunchConfiguration('params_file')

    params_declare = DeclareLaunchArgument('params_file',
                                           default_value=os.path.join(
                                               share_dir, 'params', 'mpu9250.yaml'),
                                           description='Path to the ROS2 parameters file to use.')


    control_node = Node(
        package="controller_manager",
        executable="ros2_control_node",
        parameters=[robot_description, robot_controllers],
        output="both",
    )
    robot_state_pub_node = Node(
        package="robot_state_publisher",
        executable="robot_state_publisher",
        output="both",
        parameters=[robot_description],
    )

    robot_localization = Node(
        package='robot_localization',
        executable='ekf_node',
        name='ekf_filter_node',
        output='screen',
        parameters=[robot_localization_file_path,
        {'use_sim_time': 'false'}],
    )

    joint_state_broadcaster_spawner = Node(
        package="controller_manager",
        executable="spawner",
        arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],
    )

    robot_controller_spawner = Node(
        package="controller_manager",
        executable="spawner",
        arguments=["diffbot_base_controller", "--controller-manager", "/controller_manager"],
    )

#    mpu9250driver_node = Node(
#        package='mpu9250driver',
#        executable='mpu9250driver',
#        name='mpu9250driver_node',
#        output="screen",
#        emulate_tty=True,
#        parameters=[parameter_file]
#    )

    # Spawn imu_sensor_broadcaser
    imu_broadcaster_node = Node(
#        condition=IfCondition(use_ros2_control),
        package='controller_manager',
        executable='spawner',
        arguments=['imu_broadcaster'])

    ublox_dir = get_package_share_directory('ublox_dgnss')
    print("ublox_dir: ", ublox_dir)
    gnss_included_launch = launch.actions.IncludeLaunchDescription(
        launch.launch_description_sources.PythonLaunchDescriptionSource(
                ublox_dir + '/launch/ublox_rover_hpposllh_navsatfix.launch.py'))

    nodes = [
        control_node,
        robot_state_pub_node,
        robot_localization,
        joint_state_broadcaster_spawner,
        params_declare,
        imu_broadcaster_node,
        gnss_included_launch,
    ]

    return LaunchDescription(nodes)
